const express = require('express');
const bodyParser = require('body-parser');

//const testModel = require('./models/test-model');



const mongoose = require('mongoose');
//const testModel = require('./models/test-model');

const question = require('./models/question-model');
const answer = require('./models/answer-model');

const app = express();

mongoose.connect("mongodb+srv://admin2:Test123@cluster0.cuued.mongodb.net/test",{ useNewUrlParser: true , useUnifiedTopology: true })
  .then(()=> {
    console.log('Connected to mongodb database')
  })
  .catch(()=>{
    console.log('Connection failed to mongodb database')
  });


/*
question.create([
    {
    question:'Who is known as father of Java Programming Language?',
    choice1:'James Gosling',
    choice2:'M. P Java',
    choice3:'Charel Babbage',
    choice4:'Blais Pascal'
    },
    {
    question:'In java control statements break, continue, return, try-catch-finally and assert belongs to?',
    choice1:'Selection statements',
    choice2:'Loop Statements',
    choice3:'Transfer statements',
    choice4:'Pause Statement'
    },
    {
    question:'Which provides runtime environment for java byte code to be executed?',
    choice1:'JDK',
    choice2: 'JVM',
    choice3: 'JRE',
    choice4:'JAVAC'
    },
    {
    question:'What is byte code in Java?',
    choice1:'Code generated by a Java compiler',
    choice2: 'Code generated by a Java Virtual Machine',
    choice3: 'Name of Java source code file',
    choice4:'Block of code written inside a class'
    },
    {
    question:'Which of the following are not Java keywords ?',
    choice1:'double',
    choice2: 'switch',
    choice3: 'then',
    choice4:'instanceof'
    },
    {
    question:'In Java code, the line that begins with *//* and ends with *//* is known as?',
    choice1:'Multiline comment',
    choice2: 'Single line comment',
    choice3: 'Both A & B',
    choice4:'None of these'
    },
    {
    question:'Which of the following are not the methods of the Thread class?',
    choice1:'yield()',
    choice2: 'sleep(long msec)',
    choice3: 'go()',
    choice4:'stop()'
    },
    {
    question:'What feature of OOP has a super-class sub-class concept?',
    choice1:'Hierarchical inheritance',
    choice2: 'Single inheritance',
    choice3: 'Multiple inheritances',
    choice4:'Multilevel inheritance'
    },
    {
    question:'What is garbage collection in the context of Java?',
    choice1:'Java deletes all unused java files on the system.',
    choice2: 'Memory used by the object with no reference is automatically reclaimed.',
    choice3: 'The JVM cleans output of Java program with error.',
    choice4:'Any unused package in a program automatically gets deleted.'
    },
    {
    question:'Which one is a template for creating different objects ?',
    choice1:'An Array',
    choice2: 'A class',
    choice3: 'Interface',
    choice4:'Method'
    },
    {
    question:"Which variables are created when an object is created with the use of the keyword 'new' and destroyed when the object is destroyed?",
    choice1:'Local variables',
    choice2: 'Instance variables',
    choice3: 'Class Variables',
    choice4:'Static variables'
    }
  ]);

answer.create([
    {
    option: 'A',
    answer: 'James Gosling [Option : A]'
    },
    {
    option: 'C',
    answer: 'Transfer statements [Option : C]'
    },
    {
    option: 'B',
    answer: 'JVM [Option : B]'
    },
    {
    option: 'A',
    answer: 'Code generated by a Java compiler [Option : A]'
    },
    {
    option: 'C',
    answer: 'then [Option : C]'
    },
    {
    option: 'A',
    answer: 'Multiline comment [Option : A]'
    },
    {
    option: 'C',
    answer: 'go() [Option : C]'
    },
    {
    option: 'A',
    answer: 'Hierarchical inheritance [Option : A]'
    },
    {
    option: 'B',
    answer: 'Memory used by the object with no reference is automatically reclaimed. [Option : B]'
    },
    {
    option: 'B',
    answer: 'A class [Option : B]'
    },
    {
    option: 'B',
    answer: 'Instance variables [Option : B]'
    }
]);
*/

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: false}));

app.use((req, res, next) => {

  res.setHeader("Access-Control-Allow-Origin","*");
  res.setHeader(
      "Access-Control-Allow-Headers",
      "Origin, X-Requested-With, Content-Type, Accept"
      );
  res.setHeader(
      "Access-Control-Allow-Methods",
      "POST, GET, PATCH, PUT, DELETE, OPTIONS"
      );
  next();
});



app.get('/api/question', (req,res,next) => {
  question.find().then(data => {
    console.log("data question express" , data);
    res.status(200).json(
      data
    );
  });
});


app.get('/api/answer', (req,res,next) => {

  answer.find().then(data => {
    console.log("data answer express" , data);
    res.status(200).json(
      data
    );
  });
});



/* TEMPORARY INSERTING DATA

app.get('/api/tests', (req, res, next) => {
  //const test = req.body;
  const test = new testModel ({
    question:'What is garbage collection in the context of Java?',
    choice1:'Java deletes all unused java files on the system.',
    choice2:'Memory used by the object with no reference is automatically reclaimed.',
    choice3:'The JVM cleans output of Java program with error.',
    choice4:'Any unused package in a program automatically gets deleted.',
    answer:'Memory used by the object with no reference is automatically reclaimed. [Option : B]'
  });
  console.log(test);
  test.save().then(createTest =>{
    res.status(201).json(
      {
        message: "test successfully added",
        testId:createTest._id
    });
  });
  });
*/
module.exports = app;
